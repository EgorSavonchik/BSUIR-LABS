CREATE TABLE students_log (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    username VARCHAR2(100) NOT NULL,
    date_of_action DATE NOT NULL,
    operation VARCHAR2(10) NOT NULL,
    stud_id NUMBER NOT NULL,
    stud_name VARCHAR2(100) NOT NULL,
    stud_group_id NUMBER NOT NULL
);

CREATE OR REPLACE TRIGGER Students_Logging
AFTER INSERT OR UPDATE OR DELETE ON STUDENTS
FOR EACH ROW
DECLARE
    v_username VARCHAR2(30) := USER;
    v_date DATE := SYSDATE;
    v_operation VARCHAR2(20);
BEGIN
    IF INSERTING THEN
        v_operation := 'INSERT';
        INSERT INTO STUDENTS_LOG (USERNAME, DATE_OF_ACTION, OPERATION, STUD_ID, STUD_NAME, STUD_GROUP_ID)
        VALUES (v_username, v_date, v_operation, :NEW.ID, :NEW.NAME, :NEW.GROUP_ID);
    ELSIF UPDATING THEN
        v_operation := 'UPDATE';
        INSERT INTO STUDENTS_LOG (USERNAME, DATE_OF_ACTION, OPERATION, STUD_ID, STUD_NAME, STUD_GROUP_ID)
        VALUES (v_username, v_date, v_operation, :NEW.ID, :NEW.NAME, :NEW.GROUP_ID);
    ELSIF DELETING THEN
        v_operation := 'DELETE';
        INSERT INTO STUDENTS_LOG (USERNAME, DATE_OF_ACTION, OPERATION, STUD_ID, STUD_NAME, STUD_GROUP_ID)
        VALUES (v_username, v_date, v_operation, :OLD.ID, :OLD.NAME, :OLD.GROUP_ID);
    END IF;
END;